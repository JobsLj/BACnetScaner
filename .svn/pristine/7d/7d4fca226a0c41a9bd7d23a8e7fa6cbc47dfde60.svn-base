using BACnetCommonLib;
using NPOI.HSSF.UserModel;
using NPOI.SS.UserModel;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.IO.BACnet;
using System.Linq;
using System.Text;

namespace BACnetTranslator
{
    public class BacDevice
    {
        public BacnetAddress Address { get; set; }
        public uint DeviceId { get; set; }
        public ObservableCollection<BacProperty> Properties { get; set; }
        public int ScanIndex { get; set; } = 0; //扫点序号
        public BacDevice(BacnetAddress adr, uint device_id)
        {
            this.Address = adr;
            this.DeviceId = device_id;
        }
        public void LoadPropertiesFromExcel(string file)
        {
            try
            {
                if (!File.Exists(file)) return;
                if (this.Properties == null) this.Properties = new ObservableCollection<BacProperty>();
                using (FileStream fp = new FileStream(file, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))
                {
                    var book = new HSSFWorkbook(fp);
                    for (int sheetNum = 0; sheetNum < book.NumberOfSheets; sheetNum++)
                    {
                        var sheet = book.GetSheetAt(sheetNum);
                        if (sheet.FirstRowNum < 0 || sheet.FirstRowNum >= sheet.LastRowNum) continue;
                        for (var rowNum = sheet.FirstRowNum + 1; rowNum <= sheet.LastRowNum; rowNum++)
                        {
                            var rowContent = sheet.GetRow(rowNum);
                            if (rowContent == null) continue;
                            var pro = BacProperty.FromExcelRow(rowContent);
                            if (pro == null) continue;
                            this.Properties.Add(pro);
                        }
                    }
                }
            }
            catch (Exception exp)
            {
                Logger.Error("BacDevice.LoadPropertiesFromExcel: ", exp);
            }
        }
    }
    public class BacProperty
    {
        public BacnetObjectId ObjectId { get; set; }
        public string PROP_DESCRIPTION { get; set; }
        public string PROP_OBJECT_NAME { get; set; }
        public string PROP_PRESENT_VALUE { get; set; }
        public static BacProperty FromExcelRow(IRow row)
        {
            if (row == null) return null;
            try
            {
                BacProperty rst = new BacProperty();
                rst.PROP_OBJECT_NAME = row.GetCell(1)?.ToString();
                rst.ObjectId = new BacnetObjectId(
                    (BacnetObjectTypes)Enum.Parse(typeof(BacnetObjectTypes), row.GetCell(2)?.ToString()),
                    uint.Parse(row.GetCell(3)?.ToString()));
                rst.PROP_DESCRIPTION = row.GetCell(5)?.ToString();
                rst.PROP_PRESENT_VALUE = row.GetCell(6)?.ToString();
                return rst;
            }
            catch (Exception exp)
            {
                Logger.Error("BacProperty.FromExcelRow", exp);
                return null;
            }
        }
    }
}
